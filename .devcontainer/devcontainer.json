{
  // Dev container for developing the Vistapool integration using
  // thomasloven/hass-custom-devcontainer (runs HA Core inside the container).
  "name": "Vistapool Dev (hass-custom-devcontainer)",

  // Base image that bootstraps Home Assistant Core and a dev-friendly config.
  // "image": "ghcr.io/home-assistant/home-assistant:stable",
  "build": {
    "dockerfile": "Dockerfile.dev",
    "context": "."
  },

  "postCreateCommand": ".devcontainer/init-ha.sh",
  "workspaceFolder": "/workspace",
  "remoteUser": "vscode",

  // Forward the HA HTTP port and open a browser automatically when it appears.
  "forwardPorts": [8123],
  "portsAttributes": {
    "8123": {
      "label": "Home Assistant",
      "onAutoForward": "openBrowser",
      "requireLocalPort": false
    }
  },

  // Bind-mount your custom component and your configuration.yaml into HA's /config.
  // Keep configuration-default.yaml in repo; generate configuration.yaml as needed.
  "mounts": [
    // Mount the entire dev config folder to /config (must be writable from inside the container)
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.devcontainer/.ha_config,target=/config,type=bind",
    "source=${localWorkspaceFolder}/custom_components/vistapool,target=/config/custom_components/vistapool,type=bind"
  ],

  // VS Code recommendations and per-workspace settings.
  "customizations": {
    "vscode": {
      "extensions": [
        // Python tooling
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",

        // Optional: Docker tooling (handy for logs/inspecting)
        "ms-azuretools.vscode-docker",

        // Optional: Ruff linter
        // "charliermarsh.ruff",

        // Prettier code formatter
        "esbenp.prettier-vscode",

        // EditorConfig support
        "editorconfig.editorconfig"
      ],
      "settings": {
        "terminal.integrated.shell.linux": "/bin/bash",

        // Let Pylance resolve imports
        "python.analysis.extraPaths": ["/usr/local/lib/python3.13/site-packages"],
        "python.analysis.typeCheckingMode": "off",
        "python.analysis.diagnosticSeverityOverrides": { "reportMissingImports": "none" },

        // Use Black as formatter
        "python.formatting.provider": "none",
        "[python]": { "editor.defaultFormatter": "ms-python.black-formatter" },
        "editor.formatOnSave": true,

        // Testing: run pytest with the same args you'd run from CLI
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": ["tests", "--cov=custom_components/vistapool", "--cov-report=term-missing", "-q"],

        // Optional: silence random forwarded ports (keep HA visible)
        "remote.otherPortsAttributes": { "onAutoForward": "ignore" },

        // Optional: allow auto tasks (e.g., from Docker extension)
        "task.allowAutomaticTasks": "on"
      }
    }
  }
}
