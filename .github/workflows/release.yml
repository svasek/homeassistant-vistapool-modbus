name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'release-please--*'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: simple
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

      - name: Extract version from CHANGELOG.md
        if: startsWith(github.ref, 'refs/heads/release-please--')
        run: |
          VERSION=$(grep -m1 -oP '^## \[\K[^\]]+' CHANGELOG.md)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update manifest.json version
        if: startsWith(github.ref, 'refs/heads/release-please--')
        run: |
          jq ".version=\"$VERSION\"" custom_components/vistapool/manifest.json > tmp.$$.json && mv tmp.$$.json custom_components/vistapool/manifest.json

      - name: Commit manifest.json version bump
        if: startsWith(github.ref, 'refs/heads/release-please--')
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          git config user.name "$AUTHOR_NAME"
          git config user.email "$AUTHOR_EMAIL"
          git add custom_components/vistapool/manifest.json
          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "chore(manifest): bump version to $VERSION"
          else
            echo "No changes to commit"
          fi
          git pull --rebase
          # Push only if HEAD is ahead of remote
          if [ $(git rev-list --left-right --count origin/$(git rev-parse --abbrev-ref HEAD)...HEAD | awk '{print $2}') -gt 0 ]; then
            git push
          else
            echo "Nothing new to push."
          fi